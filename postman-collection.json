{
  "info": {
    "name": "Task API Tests",
    "description": "Postman collection for testing the Task API.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\": \"Test Task\", \"description\": \"This is a test task\", \"completed\": false}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Task created successfully\", function () {",
              "    pm.response.to.have.status(201);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property(\"id\");",
              "    pm.environment.set(\"taskId\", responseJson.id); // Save the autogenerated id",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "response": []
    },
    {
      "name": "Get Task by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Task retrieved successfully\", function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.id).to.eql(pm.environment.get(\"taskId\")); // Validate id matches",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\": \"Updated Task\", \"description\": \"Updated description\", \"completed\": true}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Task updated successfully\", function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.id).to.eql(pm.environment.get(\"taskId\")); // Validate id matches",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Task deleted successfully\", function () {",
              "    pm.response.to.have.status(204); // Ensure deletion status",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": ""
    },
    {
      "key": "taskId",
      "value": ""
    }
  ]
}
